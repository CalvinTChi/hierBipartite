Y1 = Y[groups[["LUNG_1"]], ]
X2 = X[groups[["LUNG_2"]], ]
Y2 = Y[groups[["LUNG_2"]], ]
graph1 = ConstructBipartiteG(X1, Y1)
graph1 = ConstructBipartiteG(X1, Y1)
graph2 = ConstructBipartiteG(X2, Y2)
tvd12 = tvd(graph1, graph2)
tvd12
tvds12 = null_distri(X1, Y1, X2, Y2)
hist(tvds12)
tvd12
graph1 = ConstructBipartiteG(X1, Y1)
graph1 = ConstructBipartiteG(X1, Y1)
graph2 = ConstructBipartiteG(X2, Y2)
tvd12 = tvd(graph1, graph2)
graph2 = ConstructBipartiteG(X2, Y2)
tvd12 = tvd(graph1, graph2)
tvd_g12 = tvd(graph_g1, graph_g2)
tvd_g12
hist(tvds_g)
tvds_g = null_distri(Xgroup1, Ygroup1, Xgroup2, Ygroup2)
hist(tvds_g)
tvds_g
tvd_g12
hist(tvds12)
tvd12
null_distri = function(X1, Y1, X2, Y2, n.perm = 50) {
tvds = vector(length = n.perm)
for (i in seq(n.perm)) {
bootstrapIdx1 = sample(seq(nrow(X1)), size = nrow(X1), replace = TRUE)
bootstrapIdx2 = sample(seq(nrow(X2)), size = nrow(X2), replace = TRUE)
X1.b = X1[bootstrapIdx1, ]
Y1.b = Y1[bootstrapIdx1, ]
X2.b = X2[bootstrapIdx2, ]
Y2.b = Y2[bootstrapIdx2, ]
scca1 = scca(X1.b, Y1.b, penalty = "LASSO")
scca2 = scca(X2.b, Y2.b, penalty = "LASSO")
B1 = c(outer(scca1$A, scca1$B))
B2 = c(outer(scca2$A, scca2$B))
tvds[i] = tvd(B1, B2)
}
return(tvds)
}
tvds12 = null_distri(X1, Y1, X2, Y2)
hist(tvds12)
tvd12
p_value(tvd12, tvds12)
null_distri = function(X1, Y1, X2, Y2, n.perm = 10) {
tvds = vector(length = n.perm)
for (i in seq(n.perm)) {
bootstrapIdx1 = sample(seq(nrow(X1)), size = nrow(X1) * 0.8, replace = FALSE)
bootstrapIdx2 = sample(seq(nrow(X2)), size = nrow(X2) * 0.8, replace = FALSE)
X1.b = X1[bootstrapIdx1, ]
Y1.b = Y1[bootstrapIdx1, ]
X2.b = X2[bootstrapIdx2, ]
Y2.b = Y2[bootstrapIdx2, ]
scca1 = scca(X1.b, Y1.b, penalty = "LASSO")
scca2 = scca(X2.b, Y2.b, penalty = "LASSO")
B1 = c(outer(scca1$A, scca1$B))
B2 = c(outer(scca2$A, scca2$B))
tvds[i] = tvd(B1, B2)
}
return(tvds)
}
tvds12 = null_distri(X1, Y1, X2, Y2)
hist(tvds12)
tvd12
p_value(tvd12, tvds12)
null_distri = function(X1, Y1, X2, Y2, n.perm = 50) {
tvds = vector(length = n.perm)
for (i in seq(n.perm)) {
bootstrapIdx1 = sample(seq(nrow(X1)), size = nrow(X1) * 0.8, replace = FALSE)
bootstrapIdx2 = sample(seq(nrow(X2)), size = nrow(X2) * 0.8, replace = FALSE)
X1.b = X1[bootstrapIdx1, ]
Y1.b = Y1[bootstrapIdx1, ]
X2.b = X2[bootstrapIdx2, ]
Y2.b = Y2[bootstrapIdx2, ]
scca1 = scca(X1.b, Y1.b, penalty = "LASSO")
scca2 = scca(X2.b, Y2.b, penalty = "LASSO")
B1 = c(outer(scca1$A, scca1$B))
B2 = c(outer(scca2$A, scca2$B))
tvds[i] = tvd(B1, B2)
}
return(tvds)
}
tvds12 = null_distri(X1, Y1, X2, Y2)
null_distri = function(X1, Y1, X2, Y2, n.perm = 50) {
tvds = vector(length = n.perm)
for (i in seq(n.perm)) {
bootstrapIdx1 = sample(seq(nrow(X1)), size = nrow(X1) * 0.8, replace = FALSE)
bootstrapIdx2 = sample(seq(nrow(X2)), size = nrow(X2) * 0.8, replace = FALSE)
X1.b = X1[bootstrapIdx1, ]
Y1.b = Y1[bootstrapIdx1, ]
X2.b = X2[bootstrapIdx2, ]
Y2.b = Y2[bootstrapIdx2, ]
X1.b = scale(X1.b)
X1.b[is.nan(X1.b)] = 0
Y1.b = scale(Y1.b)
Y1.b[is.nan(Y1.b)] = 0
X2.b = scale(X2.b)
X2.b[is.na(X2.b)] = 0
Y2.b = scale(Y2.b)
Y2.b[is.na(Y2.b)] = 0
scca1 = scca(X1.b, Y1.b, penalty = "LASSO")
scca2 = scca(X2.b, Y2.b, penalty = "LASSO")
B1 = c(outer(scca1$A, scca1$B))
B2 = c(outer(scca2$A, scca2$B))
tvds[i] = tvd(B1, B2)
}
return(tvds)
}
tvd12
tvds12 = null_distri(X1, Y1, X2, Y2)
hist(tvds_g)
hist(tvds12)
tvd12
p_value(tvd12, tvds12)
hist(tvds12)
graph1 = ConstructBipartiteG(X1, Y1)
graph1 = ConstructBipartiteG(X1, Y1)
graph2 = ConstructBipartiteG(X2, Y2)
tvd12 = tvd(graph1, graph2)
tvd12
hist(tvds12)
tvds12
plot(c(graph1))
plot(c(graph2))
X1 = X[groups[["LUNG_1"]], ]
Y1 = Y[groups[["LUNG_1"]], ]
X2 = X[groups[["LUNG_2"]], ]
Y2 = Y[groups[["LUNG_2"]], ]
head(rownames(X1))
head(rownames(Y1))
head(rownames(X2))
head(rownames(Y2))
null_distri = function(X1, Y1, X2, Y2, n.perm = 50) {
tvds = vector(length = n.perm)
for (i in seq(n.perm)) {
bootstrapIdx1 = sample(seq(nrow(X1)), size = nrow(X1) * 0.66, replace = FALSE)
bootstrapIdx2 = sample(seq(nrow(X2)), size = nrow(X2) * 0.66, replace = FALSE)
X1.b = X1[bootstrapIdx1, ]
Y1.b = Y1[bootstrapIdx1, ]
X2.b = X2[bootstrapIdx2, ]
Y2.b = Y2[bootstrapIdx2, ]
X1.b = scale(X1.b)
X1.b[is.nan(X1.b)] = 0
Y1.b = scale(Y1.b)
Y1.b[is.nan(Y1.b)] = 0
X2.b = scale(X2.b)
X2.b[is.na(X2.b)] = 0
Y2.b = scale(Y2.b)
Y2.b[is.na(Y2.b)] = 0
scca1 = scca(X1.b, Y1.b, penalty = "LASSO")
scca2 = scca(X2.b, Y2.b, penalty = "LASSO")
B1 = c(outer(scca1$A, scca1$B))
B2 = c(outer(scca2$A, scca2$B))
tvds[i] = tvd(B1, B2)
}
return(tvds)
}
tvds12 = null_distri(X1, Y1, X2, Y2, n.perm = 10)
hist(tvds12)
tvd12
dim(X1)
save(X, file = "data/X2.RData")
load("data/data.RData")
X = lst[["X"]]
Y = lst[["Y"]]
dim(X)
X[1:5, 1:5]
hist(X[, 1])
hist(X[, 2])
install.packages("XML")
library(scca)
?scca
?sleep
system.time(
30
)
system.time(
Sys.time(10)
)
system.time(
Sys.time(10)
)
system.time(
Sys.time(60)
)
?Sys.time
system.time(
Sys.sleep(10)
)
30123 / 60
502/60
library(hierBipartite)
data(hierBipartite)
data(CCLE)
Y = CCLE[["Y"]]
dim(Y)
hist(c(Y))
head(c(Y), n = 30)
s = function(n) {
return(n^(1/n))
}
curve(s, from = 1, to = 1000, 100)
curve(s, from = 1, to = 10, 10)
cos(pi / 3)
cos(pi / 3\4)
cos(pi / 4)
cos(2 * pi / 3)
cos(pi)
cos(4 * pi / 3)
cos(5 * pi / 3)
cos(5 * pi / 3)
6
cos(6 * pi / 3)
pi
function = sine(n) {
return(sin(n * pi / 9))
}
sine = function(n) {
return(sin(n * pi / 9))
}
sine(seq(18))
max(sine(seq(18)))
sum(sine(seq(18)))
sine = function(n) {
return(sin(n * pi / 7))
}
sine(seq(14))
max(sine(seq(14)))
max(sine(seq(20)))
setwd("~/Documents/Research/Biomarker/HierBipartiteScripts")
library(hierBipartite)
load("results/carcinoma_result.RData")
hclustObj = carcinoma_result$hclustObj
par(mar=c(3,4,1,20))
plot(hclustObj, horiz = TRUE)
knitr::opts_chunk$set(echo = TRUE)
tumor_subtypes = read.xlsx("data/CCLE_metadata.xlsx")
library(openxlsx)
tumor_subtypes = read.xlsx("data/CCLE_metadata.xlsx")
data(CCLE)
X = CCLE[["X"]]
Y = CCLE[["Y"]]
groups = CCLE[["groups"]]
tumor_subtypes = tumor_subtypes %>% dplyr::filter(CCLE.name %in% rownames(X))
library(dplyr)
tumor_subtypes = tumor_subtypes %>% dplyr::filter(CCLE.name %in% rownames(X))
organ = tumor_subtypes %>% dplyr::filter(Site.Primary == "stomach")
table(organ$Hist.Subtype1)
plot(hclustObj, horiz = TRUE)
par(mar=c(3,4,1,20))
plot(hclustObj, horiz = TRUE)
hclustObj = carcinoma_result$hclustObj
par(mar=c(3,4,1,20))
plot(hclustObj, horiz = TRUE)
carcinoma_result$nodeGroups
carcinoma_result$nodePvals
lung_adenocarcinoma_breast = carcinoma_result$nodeSCCA
lung_adenocarcinoma_breast = carcinoma_result$nodeSCCA[[1]]
plot(lung_adenocarcinoma_breast$A)
par(mar=c(3,4,1,4))
lung_adenocarcinoma_breast = carcinoma_result$nodeSCCA[[1]]
plot(lung_adenocarcinoma_breast$A)
library(scca)
load("data/carcinoma.RData")
X = carcinoma$X
Y = carcinoma$Y
groups = carcinoma$groups
names(groups)
lung_adenocarcinoma_X = X[groups["lung_adenocarcinoma"], ]
lung_adenocarcinoma_X = X[groups[["lung_adenocarcinoma"]], ]
lung_adenocarcinoma_Y = Y[groups[["lung_adenocarcinoma"]], ]
lung_adenocarcinoma_breast_scca = carcinoma_result$nodeSCCA[[1]]
lung_adenocarcinoma_X = scale(X[groups[["lung_adenocarcinoma"]], ])
lung_adenocarcinoma_Y = scale(Y[groups[["lung_adenocarcinoma"]], ])
lung_adenocarcinoma_scca = scca(lung_adenocarcinoma_X, lung_adenocarcinoma_Y, penalty = "LASSO")
plot(x = abs(lung_adenocarcinoma_breast_scca$A), y = abs(lung_adenocarcinoma_scca$A),
main = paste0("correlation: ", round(cor(abs(lung_adenocarcinoma_breast_scca$A), abs(lung_adenocarcinoma_scca$A)), 3)),
xlab = "|gene coefficients| of CML + AML", ylab = "|gene coefficients| of AML")
plot(x = abs(lung_adenocarcinoma_breast_scca$A), y = abs(lung_adenocarcinoma_scca$A),
main = paste0("correlation: ", round(cor(abs(lung_adenocarcinoma_breast_scca$A), abs(lung_adenocarcinoma_scca$A)), 3)),
xlab = "|gene coefficients| of lung adenocarcinoma + ductal carcinoma", ylab = "|gene coefficients| of lung adenocarcinoma")
par(mar=c(5,4,5,4))
plot(x = abs(lung_adenocarcinoma_breast_scca$A), y = abs(lung_adenocarcinoma_scca$A),
main = paste0("correlation: ", round(cor(abs(lung_adenocarcinoma_breast_scca$A), abs(lung_adenocarcinoma_scca$A)), 3)),
xlab = "|gene coefficients| of lung adenocarcinoma + ductal carcinoma", ylab = "|gene coefficients| of lung adenocarcinoma")
breast_X = scale(X[groups[["ductal_carcinoma"]], ])
breast_Y = scale(Y[groups[["ductal_carcinoma"]], ])
breast_scca = scca(breast_X, breast_Y, penalty = "LASSO")
plot(x = abs(lung_adenocarcinoma_breast_scca$A), y = abs(breast_scca$A),
main = paste0("correlation: ", round(cor(abs(lung_adenocarcinoma_breast_scca$A), abs(breast_scca$A)), 3)),
xlab = "|gene coefficients| of lung adenocarcinoma + ductal carcinoma", ylab = "|gene coefficients| of ductal carcinoma")
par(mar=c(3,4,1,20))
plot(hclustObj, horiz = TRUE)
carcinoma_result$nodePvals
carcinoma_result$nodeGroups
length(groups[["ductal_carcinoma"]])
length(groups[["lung_adenocarcinoma"]])
plot(x = abs(lung_adenocarcinoma_scca$A), y = abs(breast_scca$A))
cor(abs(lung_adenocarcinoma_scca$A), abs(breast_scca$A))
plot(x = abs(lung_adenocarcinoma_breast_scca$B), y = abs(breast_scca$B),
main = paste0("correlation: ", round(cor(abs(lung_adenocarcinoma_breast_scca$A), abs(breast_scca$A)), 3)),
xlab = "|gene coefficients| of lung adenocarcinoma + ductal carcinoma", ylab = "|gene coefficients| of ductal carcinoma")
plot(lung_adenocarcinoma_breast_scca$B)
lung_adenocarcinoma_breast_scca$B
plot(lung_adenocarcinoma_breast_scca$A)
scca2 = carcinoma_result$nodeSCCA[[2]]
scca2$B
all(scca2$A == scca2$B)
dim(scca2$A)
dim(scca2$B)
# CML + AML
load(file = "results/immune_result.RData")
CML_AML = immune_result$nodeSCCA[[1]]
length(CML_AML$B)
load("results/carcinoma_result_no_pval.RData"")
load("results/carcinoma_result_no_pval.RData")
carcinoma_result$nodeGroups
scca1 = carcinoma_result$nodeSCCA[[1]]
plot(scca1$A)
length(scca1$B)
length(scca1$B)
remove.packages("hierBipartite")
setwd("~/Documents/Research/Biomarker/hierBipartite/")
getwd9)
getwd()
devtools::install()
hierBipartite
library(hierBipartite)
load("data/carcinoma.RData")
setwd("~/Documents/Research/Biomarker/HierBipartiteScripts")
load("data/carcinoma.RData")
X = carcinoma[["X"]]
Y = carcinoma[["Y"]]
groups = carcinoma[["groups"]]
carcinoma_result = hierBipartite(X, Y, groups, p.value = FALSE, n_perm = 1, parallel = TRUE)
scca1 = carcinoma_result$nodeSCCA[[1]]
plot(scca1$B)
plot(scca1$A)
names(carcinoma_result$nodeSCCA)
lst = carcinoma_result$nodeSCCA
class(lst)
names(lst)
length(lst)
lst[[1]]
hierBipartite()
hierBipartite
remove.packages("hierBipartite")
setwd("~/Documents/Research/Biomarker/hierBipartite/")
devtools::install()
library(hierBipartite)
library(hierBipartite)
data(CCLE)
X = CCLE[["X"]]
Y = CCLE[["Y"]]
groups = CCLE[["groups"]]
selected_cells = c()
groups = list()
# Lung histology subtypes
lung_hist_subtypes = c("squamous_cell_carcinoma", "adenocarcinoma",
"small_cell_carcinoma", "large_cell_carcinoma")
for (i in seq(length(lung_hist_subtypes))) {
subtype = lung_hist_subtypes[i]
cells = tumor_subtypes %>% dplyr::filter(Site.Primary == "lung", Hist.Subtype1 == subtype) %>% select(CCLE.name)
cells = cells$CCLE.name
print(paste(subtype, length(cells)))
groups[[subtype]] = seq(length(selected_cells) + 1, length(selected_cells) + length(cells), 1)
selected_cells = c(selected_cells, cells)
}
selected_cells = selected_cells[selected_cells %in% rownames(X)]
head(selected_cells)
X_lung = X[selected_cells, ]
Y_lung = Y[selected_cells, ]
dim(X_lung)
dim(Y_lung)
?hierBipartite
?hierBipartite
lung_result = hierBipartite(X_lung, Y_lung, groups)
scca1 = lung_result$nodeSCCA
scca1 = lung_result$nodeSCCA[[1]]
plot(scca1$B)
plot(scca1$A)
load("data/carcinoma.RData")
setwd("~/Documents/Research/Biomarker/HierBipartiteScripts")
load("data/carcinoma.RData")
X = carcinoma[["X"]]
Y = carcinoma[["Y"]]
groups = carcinoma[["groups"]]
carcinoma_result = hierBipartite(X, Y, groups)
dim(Y)
library(hierBipartite)
library(dplyr)
library(openxlsx)
data(CCLE)
X = CCLE[["X"]]
Y = CCLE[["Y"]]
dim(Y)
dim(X)
groups = CCLE[["groups"]]
tumor_subtypes = read.xlsx("data/CCLE_metadata.xlsx")
tumor_subtypes = tumor_subtypes %>% dplyr::filter(CCLE.name %in% rownames(X))
selected_cells = c()
groups = list()
# Lung histology subtypes
lung_hist_subtypes = c("squamous_cell_carcinoma", "adenocarcinoma", "small_cell_carcinoma", "large_cell_carcinoma")
for (i in seq(length(lung_hist_subtypes))) {
subtype = lung_hist_subtypes[i]
cells = tumor_subtypes %>% dplyr::filter(Site.Primary == "lung", Hist.Subtype1 == subtype) %>% dplyr::select(CCLE.name)
cells = cells$CCLE.name
print(paste(subtype, length(cells)))
if (subtype == "adenocarcinoma") {
groups[["lung_adenocarcinoma"]] = seq(length(selected_cells) + 1, length(selected_cells) + length(cells), 1)
} else {
groups[[subtype]] = seq(length(selected_cells) + 1, length(selected_cells) + length(cells), 1)
}
selected_cells = c(selected_cells, cells)
}
# Endometrium
cells = tumor_subtypes %>% dplyr::filter(Site.Primary == "endometrium", Hist.Subtype1 == "adenocarcinoma") %>% dplyr::select(CCLE.name)
cells = cells$CCLE.name
groups[["endometrium_adenocarcinoma"]] = seq(length(selected_cells) + 1, length(selected_cells) + length(cells), 1)
selected_cells = c(selected_cells, cells)
# Liver
cells = tumor_subtypes %>% dplyr::filter(Site.Primary == "liver", Hist.Subtype1 == "hepatocellular_carcinoma") %>% dplyr::select(CCLE.name)
cells = cells$CCLE.name
groups[["hepatocellular_carcinoma"]] = seq(length(selected_cells) + 1, length(selected_cells) + length(cells), 1)
selected_cells = c(selected_cells, cells)
# Ovary
cells = tumor_subtypes %>% dplyr::filter(Site.Primary == "ovary", Hist.Subtype1 == "adenocarcinoma") %>% dplyr::select(CCLE.name)
cells = cells$CCLE.name
groups[["ovary_adenocarcinoma"]] = seq(length(selected_cells) + 1, length(selected_cells) + length(cells), 1)
selected_cells = c(selected_cells, cells)
# Large intestine
cells = tumor_subtypes %>% dplyr::filter(Site.Primary == "large_intestine") %>% dplyr::select(CCLE.name)
cells = cells$CCLE.name
groups[["large_intestine_adenocarcinoma"]] = seq(length(selected_cells) + 1, length(selected_cells) + length(cells), 1)
selected_cells = c(selected_cells, cells)
# pancreas
cells = tumor_subtypes %>% dplyr::filter(Site.Primary == "pancreas") %>% dplyr::select(CCLE.name)
cells = cells$CCLE.name
groups[["pancreas_adenocarcinoma"]] = seq(length(selected_cells) + 1, length(selected_cells) + length(cells), 1)
selected_cells = c(selected_cells, cells)
# breast
cells = tumor_subtypes %>% dplyr::filter(Site.Primary == "breast") %>% dplyr::select(CCLE.name)
cells = cells$CCLE.name
groups[["ductal_carcinoma"]] = seq(length(selected_cells) + 1, length(selected_cells) + length(cells), 1)
selected_cells = c(selected_cells, cells)
X_carcinoma = X[selected_cells, ]
Y_carcinoma = Y[selected_cells, ]
carcinoma = list("X" = X_carcinoma, "Y" = Y_carcinoma, "groups" = groups)
save(carcinoma, file = "data/carcinoma.RData")
dim(Y_carcinoma)
dim(X_carcinoma)
load("data/carcinoma.RData")
X = carcinoma[["X"]]
Y = carcinoma[["Y"]]
dim(Y)
dim(X)
groups = carcinoma[["groups"]]
groups
library(scca)
library(openxlsx)
library(dplyr)
library(reshape2)
DIR = 'data/'
load(paste0(DIR, 'CCLE.RData'))
CCLE = t(CCLE.log2.rpkm.matrix)
drugSensitivity = drug %>% dplyr::select(CCLE.Cell.Line.Name, Compound, ActArea)
drug = read.xlsx(paste0(DIR, "NIHMS361223-supplement-4.xlsx"), sheet = 12,
startRow = 3)
drugSensitivity = drug %>% dplyr::select(CCLE.Cell.Line.Name, Compound, ActArea)
drugSensitivity = dcast(drugSensitivity, CCLE.Cell.Line.Name~Compound,
value.var="ActArea")
rownames(drugSensitivity) = drugSensitivity$CCLE.Cell.Line.Name
drugSensitivity$CCLE.Cell.Line.Name = NULL
drugSensitivity = as.matrix(drugSensitivity)
dim(drugSensitivity)
dim(CCLE)
# filter out (1) drugs with many cell lines missing and (2) cell lines with drug missing
drugs_num_missing = colSums(is.na(drugSensitivity))
length(which(drugs_num_missing <= 1))
which(drugs_num_missing <= 1)
drugs_num_missing
# removed 8 out of 24 drugs
drugSensitivity = drugSensitivity[, which(drugs_num_missing <= 1)]
cells_num_missing = rowSums(is.na(drugSensitivity))
# removed 5 out of 504 cell lines
drugSensitivity = drugSensitivity[which(cells_num_missing == 0), ]
dim(drugSensitivity)
drugSensitivity = drugSensitivity[rownames(drugSensitivity) %in% rownames(CCLE), ]
dim(drugSensitivity)
499 - 468
drugSensitivity = drugSensitivity[rownames(drugSensitivity) %in% rownames(CCLE), ]
idx = match(rownames(drugSensitivity), rownames(CCLE))
# 31 out of 499 cell lines without correspoding drug sensitivity measurements removed
CCLE = CCLE[idx, ]
dim(CCLE)
dim(X)
468 - 391
cellnames = rownames(CCLE)
organs = unique(sapply(regmatches(cellnames, regexpr("_", cellnames), invert = TRUE), '[', 2))
for (organ in organs) {
cells = grep(paste0(".*", organ), cellnames)
print(paste(organ, length(cells)))
}
curve(log(x) / x^x, 2, 20)
curve(log(x) / x, 2, 20)
remove.packages("hierBipartite")
getwd()
setwd("~/Documents/Research/Biomarker/hierBipartite/")
